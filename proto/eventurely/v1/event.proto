syntax = 'proto3';

import "google/protobuf/timestamp.proto";

package eventurely.v1;

service EventService {
  rpc CreateEvent(CreateEventRequest) returns (CreateEventResponse);
  rpc GetEvent(GetEventRequest) returns (GetEventResponse);
  rpc ListUpcomingOwnedEvents(ListUpcomingOwnedEventsRequest) returns (ListUpcomingOwnedEventsResponse);
  rpc ListUpcomingInvitedEvents(ListUpcomingInvitedEventsRequest) returns (ListUpcomingInvitedEventsResponse);
  rpc ListPastEvents(ListPastEventsRequest) returns (ListPastEventsResponse);
}

service InvitationService {
  rpc UpdateInvitationStatus(UpdateInvitationStatusRequest) returns (UpdateInvitationStatusResponse);
}

// MODELS

enum ResponseStatus {
  RESPONSE_STATUS_UNSPECIFIED = 0;
  RESPONSE_STATUS_SENT = 1;
  RESPONSE_STATUS_YES = 2;
  RESPONSE_STATUS_NO = 3;
  RESPONSE_STATUS_MAYBE = 4;
}

enum PrivacySetting {
  PRIVACY_SETTING_UNSPECIFIED = 0;
  PRIVACY_SETTING_PUBLIC = 1;
  PRIVACY_SETTING_PRIVATE = 2;
}

message Event {
  int64 id = 1;
  int64 owner_id = 2;
  string title = 3;
  string description = 4;
  google.protobuf.Timestamp starts_at = 5;
  google.protobuf.Timestamp ends_at = 6;
  string location = 7;
  string unique_link = 8;
  PrivacySetting privacy_setting = 9;
}

message InvitedEvent {
  Event event = 1;
  ResponseStatus status = 2;
}

// REQUESTS & RESPONSES

message CreateEventRequest {
  int64 owner_id = 1;
  string title = 2;
  string description = 3;
  google.protobuf.Timestamp starts_at = 4;
  google.protobuf.Timestamp ends_at = 5;
  string location = 6;
  string unique_link = 7;
  PrivacySetting privacy_setting = 8;
}

message CreateEventResponse {
  int64 event_id = 1;
}

message GetEventRequest {
  int64 event_id = 1;
}

message GetEventResponse {
  Event event = 1;
}

message ListUpcomingOwnedEventsRequest {
  int64 user_id = 1;
}

message ListUpcomingOwnedEventsResponse {
  repeated Event events = 1;
}

message ListUpcomingInvitedEventsRequest {
  int64 user_id = 1;
}

message ListUpcomingInvitedEventsResponse {
  repeated InvitedEvent events = 1;
}

message ListPastEventsRequest {
  int64 user_id = 1;
}

message ListPastEventsResponse {
  repeated Event events = 1;
}

message UpdateInvitationStatusRequest {
  int64 invitation_id =1;
  ResponseStatus status =2;
}

message UpdateInvitationStatusResponse {
  int64 invitation_id = 1;
}
